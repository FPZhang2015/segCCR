fit$coefficients
data(data_ChIP)
dat0 = data_ChIP[data_ChIP$x==0,]
dat1 = data_ChIP[data_ChIP$x==1,]
dat2 = data_ChIP[data_ChIP$x==2,]
dat=rbind(dat0[1:200,],dat1[1:200,],dat2[1:200,])
par.ini = c(0.5, 2, 1, rep(0.1, 4))  # initial value
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.999, length.out = 50),
NB = 2)
fit$par
devtools::load_all(".")
library(segCCR)
data(data_ChIP)
dat0 = data_ChIP[data_ChIP$x==0,]
dat1 = data_ChIP[data_ChIP$x==1,]
dat2 = data_ChIP[data_ChIP$x==2,]
dat=rbind(dat0[1:200,],dat1[1:200,],dat2[1:200,])
par.ini = c(0.5, 2, 1, rep(0.1, 4))  # initial value
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.999, length.out = 50),
NB = 2)
fit$coefficients
n = 1000
bp0 = 0.8
## for x=0
rho01 <- 0.0   ## noise,  irreproducible
rho02 <- 0.6   ## signal, reproducible
mu01 <-  c(0, 0)
mu02 <- c(3, 3)
var01 <- 1
var02 <- 1
# for x=1
rho11 <- rho01  ## noise,  irreproducible
rho12 <- 0.9  ## signal, reproducible
mu11 <-  mu01
mu12 <-  mu02
var11 <- var01
var12 <- var02
## generate data
dat <- datSim(n, bp0,
mu01, mu02, var01, var02, rho01, rho02,
mu11, mu12, var11, var12, rho11, rho12)
y1 = dat[,1]
y2 = dat[,2]
x = dat[,3]
#####  initial point
par.ini <- c(0.8, 2, 1, 0.1, 0.1)
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.9999, length.out = 50),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
model.matrix(~1)
nocl(model.matrix(~1))
ncol(model.matrix(~1))
devtools::load_all(".")
library(segCCR)
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
devtools::load_all(".")
library(segCCR)
?segccrFit
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
taus
library(segCCR)
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
library(segCCR)
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
library(segCCR)
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
?model.matrix
x=NULL
factor(x)
is.null(factor(x))
is.empty.model(factor(x))
is.empty(factor(x))
x=rep(1,28)
factor(x)
nlevels(factor(x))
nlevels(factor(NULL))
model.matrix(~factor(NULL))
x
x <- factor(x)
x
(modmat <- model.matrix(~ x))
devtools::load_all(".")
library(segCCR)
?segccrFit
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
data(data_ChIP)
dat0 = data_ChIP[data_ChIP$x==0,]
dat1 = data_ChIP[data_ChIP$x==1,]
dat2 = data_ChIP[data_ChIP$x==2,]
dat=rbind(dat0[1:200,],dat1[1:200,],dat2[1:200,])
par.ini = c(0.5, 2, 1, rep(0.1, 4))  # initial value
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.999, length.out = 50),
NB = 2)
fit$coefficients
x=rep(1,28)
x=factor(x)
x
model.matrix(x)
model.matrix(~x)
model.matrix(~NULL)
nlevels(model.matrix(~NULL))
y=cbind(rep(1,28),c(rep(0,14),rep(1,14))
)
y
model.matrix(~factor(y))
model.matrix(~factor(y[,2]))
devtools::load_all(".")
library(segCCR)
?segccrFit
n = 1000
bp0 = 0.8
## for x=0
rho01 <- 0.0   ## noise,  irreproducible
rho02 <- 0.6   ## signal, reproducible
mu01 <-  c(0, 0)
mu02 <- c(3, 3)
var01 <- 1
var02 <- 1
# for x=1
rho11 <- rho01  ## noise,  irreproducible
rho12 <- 0.9  ## signal, reproducible
mu11 <-  mu01
mu12 <-  mu02
var11 <- var01
var12 <- var02
## generate data
dat <- datSim(n, bp0,
mu01, mu02, var01, var02, rho01, rho02,
mu11, mu12, var11, var12, rho11, rho12)
y1 = dat[,1]
y2 = dat[,2]
x = dat[,3]
#####  initial point
par.ini <- c(0.8, 2, 1, 0.1, 0.1)
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.9999, length.out = 50),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
fit = segccrFit(cbind(-spawners, -recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
x
x=cbind(rep(1,28),c(rep(2,14),rep(3,14)))
x
factor(x)
factor(x[-1])
factor(x[,-1])
y=x[,-2]
y
factor(y)
model.matrix(~facotr(x[,-1]))
model.matrix(~factor(x[,-1]))
x
x <- cbind(rep(1,28), c(rep(2,14), rep(3,14)))
y = x[,-1]
y = x[,-1]
y <- factor(y)
y
model.matrix(~y)
x1 = x[,1]
x <- cbind(rep(1,28), c(rep(2,14), rep(3,14)))
x1 = x[,1]
model.matrix(~factor(x1))
x1
nlevels(factor(x1))
model.matrix(~factor(x1)+0)
model.matrix(~factor(y)+0)
x=NULL
factor(x)
nlevels(factor(x))
devtools::load_all(".")
library(segCCR)
?segccrFit
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.01, 0.99, length.out = 28),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.6, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = NULL,
tm=seq(0.01, 0.99, length.out = 28),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.6, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.01, 0.99, length.out = 28),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.01, 0.99, length.out = 28),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(-spawners, -recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.01, 0.99, length.out = 28),
NB = 2)
fit$coefficients
devtools::load_all(".")
library(segCCR)
?segccrFit
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
devtools::load_all(".")
library(segCCR)
?segccrFit
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(-spawners, -recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
library(segCCR)
?segccrFit
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(-spawners, -recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
data(data_ChIP)
## estimate
par.ini = c(0.5, 2, 1, rep(0.1, 8))  # initial value
fit = segccrFit(cbind(y1, y2)~x, data = data_ChIP,
par.ini = par.ini,
tm=seq(0.01, 0.999, length.out = 50),
NB = 2)
fit$coefficients
head(data_ChIP)
data_ChIP$x
data_ChIP$x[1:1335]
data_ChIP$x[1336:(1335+2198)]
devtools::load_all(".")
library(segCCR)
?segccrFit
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
devtools::load_all(".")
library(segCCR)
?se
?segccrFit
data(data_salmon)
## estimate
par.ini = c(0.5, 1, 2)  # initial value
fit = segccrFit(cbind(spawners, recruits)~1, data = data_salmon,
par.ini = par.ini,
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
fit$coefficients
data(data_ChIP)
dat0 = data_ChIP[data_ChIP$x==0,]
dat1 = data_ChIP[data_ChIP$x==1,]
dat2 = data_ChIP[data_ChIP$x==2,]
dat=rbind(dat0[1:200,],dat1[1:200,],dat2[1:200,])
par.ini = c(0.5, 2, 1, rep(0.1, 4))  # initial value
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.999, length.out = 50),
NB = 2)
devtools::load_all(".")
library(segCCR)
data(data_ChIP)
dat0 = data_ChIP[data_ChIP$x==0,]
dat1 = data_ChIP[data_ChIP$x==1,]
dat2 = data_ChIP[data_ChIP$x==2,]
dat=rbind(dat0[1:200,],dat1[1:200,],dat2[1:200,])
par.ini = c(0.5, 2, 1, rep(0.1, 4))  # initial value
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.999, length.out = 50),
NB = 2)
library(segCCR)
devtools::load_all(".")
library(segCCR)
?segccrFit
data(data_ChIP)
dat0 = data_ChIP[data_ChIP$x==0,]
dat1 = data_ChIP[data_ChIP$x==1,]
dat2 = data_ChIP[data_ChIP$x==2,]
dat=rbind(dat0[1:200,],dat1[1:200,],dat2[1:200,])
par.ini = c(0.5, 2, 1, rep(0.1, 4))  # initial value
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.999, length.out = 50),
NB = 2)
fit$coefficients
?rep
dn0 = c(1,2)
paste0("level", rep(dn0, each=2),
rep(c(":-", ":+"), times=length(dn0)), seq = "")
library(segCCR)
?segccrFit
n = 1000
bp0 = 0.8
## for x=0
rho01 <- 0.0   ## noise,  irreproducible
rho02 <- 0.6   ## signal, reproducible
mu01 <-  c(0, 0)
mu02 <- c(3, 3)
var01 <- 1
var02 <- 1
# for x=1
rho11 <- rho01  ## noise,  irreproducible
rho12 <- 0.9  ## signal, reproducible
mu11 <-  mu01
mu12 <-  mu02
var11 <- var01
var12 <- var02
## generate data
dat <- datSim(n, bp0,
mu01, mu02, var01, var02, rho01, rho02,
mu11, mu12, var11, var12, rho11, rho12)
y1 = dat[,1]
y2 = dat[,2]
x = dat[,3]
#####  initial point
par.ini <- c(0.8, 2, 1, 0.1, 0.1)
fit = segccrFit(cbind(y1, y2)~x, data = dat,
par.ini = par.ini,
tm=seq(0.01, 0.999, length.out = 50),
NB = 2)
fit$coefficients
?segccrTest
fit = segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
library(segCCR)
fit = segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
?segccrTest
devtools::load_all(".")
library(segCCR)
?segccrTest
data(data_salmon)
## estimate
segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
devtools::load_all(".")
library(segCCR)
data(data_salmon)
## estimate
segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
devtools::load_all(".")
library(segCCR)
data(data_salmon)
## estimate
segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
devtools::load_all(".")
Q
library(segCCR)
data(data_salmon)
## estimate
segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
data(data_salmon)
## estimate
segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.01, 0.999, length.out = 28),
NB = 2)
devtools::load_all(".")
library(segCCR)
data(data_salmon)
## estimate
segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
devtools::load_all(".")
library(segCCR)
data(data_salmon)
## estimate
segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
devtools::load_all(".")
library(segCCR)
?segccrTest
data(data_salmon)
## estimate
segccrTest(cbind(data_salmon$spawners, data_salmon$recruits),
tm=seq(0.001, 0.999, length.out = 28),
NB = 2)
?optimize
devtools::document()
library(segCCR)
devtools::load_all(".")
library(segCCR)
